// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";

/** Identifier type for schemaversion */
export type Version = number & { __flavor?: "Version" };

/** Represents the table public.schemaversion */
export default interface Schemaversion {
    /** Database type: pg_catalog.int8 */
    version: Version;

    /** Database type: pg_catalog.text */
    name: string | null;

    /** Database type: pg_catalog.text */
    md5: string | null;

    /** Database type: pg_catalog.timestamptz */
    run_at: Date | null;
}

/** Represents the initializer for the table public.schemaversion */
export interface SchemaversionInitializer {
    /** Database type: pg_catalog.int8 */
    version: Version;

    /** Database type: pg_catalog.text */
    name?: string | null;

    /** Database type: pg_catalog.text */
    md5?: string | null;

    /** Database type: pg_catalog.timestamptz */
    run_at?: Date | null;
}

/** Represents the mutator for the table public.schemaversion */
export interface SchemaversionMutator {
    /** Database type: pg_catalog.int8 */
    version?: Version;

    /** Database type: pg_catalog.text */
    name?: string | null;

    /** Database type: pg_catalog.text */
    md5?: string | null;

    /** Database type: pg_catalog.timestamptz */
    run_at?: Date | null;
}

export const version = z.string() as unknown as z.Schema<Version>;

export const schemaversion = z.object({
    version: version,
    name: z.string().nullable(),
    md5: z.string().nullable(),
    run_at: z.date().nullable(),
}) as unknown as z.Schema<Schemaversion>;

export const schemaversionInitializer = z.object({
    version: version,
    name: z.string().optional().nullable(),
    md5: z.string().optional().nullable(),
    run_at: z.date().optional().nullable(),
}) as unknown as z.Schema<SchemaversionInitializer>;

export const schemaversionMutator = z.object({
    version: version.optional(),
    name: z.string().optional().nullable(),
    md5: z.string().optional().nullable(),
    run_at: z.date().optional().nullable(),
}) as unknown as z.Schema<SchemaversionMutator>;
