version: "3.9" # optional since v1.27.0

services:
    redis:
        image: redis:7.2.3-alpine3.19
        command: redis-server --save "" --appendonly no --maxmemory 50mb --replicaof no one
        ports:
            - "6379:6379"
        networks:
            - backend

    postgres:
        image: postgres-databarn-warehouse:0.1.0
        build:
            context: ./db
            dockerfile: Dockerfile
        volumes:
            - db_data:/pgdata
            - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
        # configure the database
        #command: postgres -c max_locks_per_transaction=600
        command: postgres -c logging_collector=off -c log_min_duration_statement=1s -c log_statement=none -c max_locks_per_transaction=500
        env_file: ../.env
        cpus: ${POSTGRES_CPU_SHARE:-0.3}
        stop_signal: SIGINT
        ports:
            - "5432:5432"
        environment:
            TZ: "UTC"
            POSTGRES_PORT: 5432
            POSTGRES_USER: beefy
            POSTGRES_PASSWORD: beefy
            POSTGRES_DB: beefy
            PGDATA: /pgdata
        networks:
            - backend

    grafana:
        image: grafana/grafana:10.2.2
        ports:
            - "3000:3000"
        # keep a separate env file to avoid exposing too many secrets in case grafana gets compromised
        env_file: ../.env-grafana
        cpus: ${GRAFANA_CPU_SHARE:-0.3}
        stop_signal: SIGINT
        environment:
            TZ: UTC
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432
            POSTGRES_USER: grafana_ro
            POSTGRES_PASSWORD: grafana_ro
            POSTGRES_DB: beefy
            PORT: 3000
            GRAFANA_WEBAPP_DOMAIN_NAME: localhost
            GF_AUTH_DISABLE_LOGIN: false
            GF_AUTH_DISABLE_LOGIN_FORM: false
            GF_AUTH_GITHUB_ENABLED: false
            DISCORD_ALERT_WEBHOOK_URL: "http://localhost"
        volumes:
            - grafana_data_wtf:/var/lib/grafana
            - grafana_plugins:/var/lib/grafana/plugins
            - ../apps/grafana/custom.ini:/etc/grafana/grafana.ini
            - ../apps/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
            - ../apps/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
            - ../apps/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        depends_on:
            - postgres
        networks:
            - backend

volumes:
    db_data: {}
    grafana_data_wtf: {}
    grafana_data: {}
    grafana_plugins: {}

networks:
    backend: {}
